
$utilities: map-merge(
    $utilities,(
      "position": map-merge(
        map-get($utilities,"position"),
        (
          responsive: true,
          class: pos
        )
      ),
      "width": map-merge(
        map-get($utilities,"width"),
        (
          responsive: true,
          values: map-merge(
          map-get(map-get($utilities, "width"), "values"),
          (
            30: 30%,
            35: 35%,
            40: 40%,
            45: 45%,
            55: 55%,
            60: 60%,
            65: 65%,
            70: 70%,
            80: 80%,
            85: 85%,
            90: 90%,
            95: 95%,
            auto: auto
          ),
        )
        )
      ),
      "justify-content": map-merge(
        map-get($utilities,"justify-content"),
        (
          class: justify,
        )
      ),
      "align-items": map-merge(
        map-get($utilities,"align-items"),
        (
          class: items,
        )
      ),
      "align-self": map-merge(
        map-get($utilities,"align-self"),
        (
          class: self,
        )
      ),
      "font-weight": (
        responsive: true,
        property: font-weight,
        class: fw,
        values: $weightVal
      ),
      "white-space": (
        property: white-space,
        class: ws,
        values: (
          wrap: normal,
          nowrap: nowrap,
          pre: pre,
          pre-line: pre-line,
          pre-wrap: pre-wrap
        )
      ),
      "font-size": map-merge(
        map-get($utilities,"font-size"),
        (
          responsive: true,
          rfs: false,
        )
      ),
      "overflow": map-merge(
        map-get($utilities,"overflow"),(
          responsive: true,
          property: overflow,
          state: hover,
          class: overflow,
          values: ( auto, hidden, visible, scroll)
        )
      ),
      "overflow-x": map-merge(
        map-get($utilities,"overflow"),(
          responsive: true,
          state: hover,
          property: overflow-x,
          class: overflow-x
        )
      ),
      "overflow-y": map-merge(
        map-get($utilities,"overflow"),(
          responsive: true,
          state: hover,
          property: overflow-y,
          class: overflow-y
        )
      ),
      "shadow": map-merge(
        map-get($utilities,"shadow"),(
          responsive: true,
          state: hover,
        )
      ),
      "z-index": (
        property: z-index,
        responsive: true,
        class: z,
        values: $zindex,
      ),
      "viewport-height": (
        property: height,
        class: vh,
        values: (
          $heightVal
          )
      ),
      "min-viewport-height":  map-merge(
        map-get($utilities,"min-viewport-height"),(
          responsive: true,
          values: (
            $heightVal
          )
        )
      ),
      "opacity": (
        property: opacity,
        values: (
          0: 0,
          25: .25,
          30: .3,
          50: .5,
          67: .67,
          75: .75,
          100: 1,
        )
      ),
      "color": map-merge(
        map-get($utilities,"color"),(
          state: hover,
        )
      ),
      "background-color": map-merge(
        map-get($utilities,"background-color"),(
          state: hover,
        )
    ),
      "object-fit":(
        property: object-fit,
        class: object,
        values: $object-fitVal,
      ),
      "object-position":(
        property: object-position,
        class: object,
        values: (
          start: left,
          end: right,
          top: top,
          center: center,
          bottom: bottom,
          start-bottom: left bottom,
          start-top: left top,
          end-bottom: right bottom,
          end-top: right top,
          start-center: left center,
          end-center: right center,
          center-center: center center,
          center-top: center top,
          center-bottom: center bottom,
        )
      ),
      "rounded": (
      property: border-radius,
      class: rounded,
      values: (
        null: $border-radius,
        0: 0,
        1: $border-radius-sm,
        2: $border-radius,
        3: $border-radius-lg,
        bs: $spacer,
        circle: 50%,
        pill: $border-radius-pill
      )
    ),
      "background-repeat": (
        property: background-repeat,
        class: bg,
        values: (repeat, no-repeat, repeat-x, repeat-y, round, space)
      ),
      "background-size": (
        property: background-size,
        class: bg,
        values: (auto, cover, contain)
      ),
      "background-position": (
        property: background-position,
        class: bg,
        values: (
          start: left,
          end: right,
          top: top,
          center: center,
          bottom: bottom,
          start-bottom: left bottom,
          start-top: left top,
          end-bottom: right bottom,
          end-top: right top,
          start-center: left center,
          end-center: right center,
          center-center: center center,
          )
      ),
      "background-attachment": (
        property: background-attachment,
        class: bg,
        values: (fixed, local, scroll)
      ),
      "gap-x": (
      responsive: true,
      property: column-gap,
      class: gap-x,
      values: $spacers
    ),
    "gap-y": (
      responsive: true,
      property: row-gap,
      class: gap-y,
      values: $spacers
    ),
    "whitespace": map-merge(
      map-get($utilities,"white-space"),(
      responsive: true,
      class: ws,
      )
    ),
    "list-style": (
      property: list-style-type,
      class: list,
      values: ( disc, circle, square, decimal)
    ),
    "gap": (
      responsive: true,
      property: gap,
      values: $spacers
    ),
    "ratio":(
      property: --dyg-aspect-ratio,
      class: ratio,
      responsive: true,
      values: $aspect-ratios,
    ),
    "max-height": (
      responsive: true,
      property: max-height,
      class: mxh,
      values: ( $imgSizes)
    )
    )
  );

  @each $color, $val in $theme-colors{
    .ph-#{$color}{
      &::placeholder {
        color: $val !important;
      }
      &::-webkit-input-placeholder {
        color: $val !important;
      }
      &:-ms-input-placeholder {
        color: $val !important;
      }
      &::-moz-placeholder {
        color: $val !important;
        opacity: 1;
      }
    }
  }
